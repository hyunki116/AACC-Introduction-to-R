---
title: "Installing and Configuring R"
author:
  - "Joe Rudolf"
  - "Patrick Mathias"
output: html_document
---

# Introduction to R

In this lesson we will cover some R basics including installing/configuring R, a quick introduction to coding, and the fundamentals of making our data analysis reporducible.  This content can be a little dry but provides the necessary building blocks for the more interesting content to come.  Hang in there and we will get to importing, manipulating, and visualizing real laboratory data ASAP!  

## What is R?

R is a statistical programming language.  Using R you can load, analyze, and visualize data.  R has the same functionality you are used to in other spreadsheet applications (e.g. Microsoft Excel) but offers greater functionality and flexibility.

R also provides an environment in which we can conduct reproducible data analysis.  R affords us the capabilities to document our data analysis and save it in a way that we can revisit our analysis at a later date, update our approach when inspiration strikes, and share our analysis with friends.

## Installing R (and some other stuff to make R work)

### R

R is the programming language that we will be using to conduct our data analysis today.

To install R, go to the [Comprehensive R Archive Network (CRAN)](https://cloud.r-project.org]).  Select the version of R for your operating system (Windows, Mac OS, Linux)

### RStudio

R studio is the development environment in which we will do our R programming.

Download and install [RStudio](https://www.rstudio.com/products/rstudio/download/#download).  Select the installer for your Operating System.

When you launch RStudio you will be presented with with a series of panes.  Let's start by getting oriented to the RStudio application.

![Screen shot of RStudio](assets/RStudio_screenshot.png)

In general, the left side of the screen is used to write and execute code, and the right side of the screen provides information about the environment you are working with. The output of your code typically appears on the left side, but can show up on the right, if you are creating a plot from the Console.

When you first open R, on the left you will see the **Console** tab automatically open and fill the entire left side of the screen.  The console is one place to enter and execute our R code.  

By default the right side is split into an upper and lower pane, and each pane contains multiple tabs. If you select the **Files** tab on the lower right pane, you will see the file hierarchy for whatever the default working directory R is using. The **Plots** tab shows the output of the last plot that was generated using code in the console, and the **Packages** tab shows the list of packages that are installed on your computer (and therefore available to load for your computing session).

The **Environment** tab in the pane in the upper right corner of the screen shows any objects that have are available in the environment. As an example, if you imported data from a spreadsheet into an object called "data", a "data" object would appear in the environment tab and you could click on it to learn more information. 

Another very useful tab on the top right is the **History** tab.  Here we can see the historical record of the code we have executed in the console.

### The Tidyverse

To enhance the functionality of R, we need to install additional packages.  A package is a collection of functions that extend the capabilities of the base R programming language.

In this course we will be primarily using the tidyverse package.  The tidyverse includes functions for reading data into the R environment, cleaning and manipulating data, and plotting our results.

Installing the tidyverse package is as easy as entering the following line of code in the RStudio console (the box on the left hand side of RStudio) and pressing the return (enter) key.

```{r, eval=FALSE}
install.packages("tidyverse", dependencies = TRUE)
```

## Configuring the RStudio Environment

### Setting the Working Directory

Let's create a folder on our desktop called "R_intro" in which to save our work today.  Now let's establish our R_intro folder as our working directory.

A working directory is where R will read our data from and save our work to.  Let's set our working directory to to the R_intro folder in RStudio (Session -> Set Working Directory -> Choose Directory).

We can check to see that we have set the correct working directory by running the following code in the console.

```{r}
getwd()
```
